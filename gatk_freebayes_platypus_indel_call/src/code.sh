#!/usr/bin/bash
set -e -x -o pipefail 

dx download "$realigned_bam" -o sample.bam
dx download "$realigned_bai" -o sample.bai

PROJECT="$DX_PROJECT_CONTEXT_ID"

dx download "$PROJECT:/resources/hs37d5.fasta-index.tar.gz"
tar xvzf hs37d5.fasta-index.tar.gz #=>genome.fa, genome.fa.fai, genome.fa.dict

#dx download "$PROJECT:/resources/gatk_resources-2.8.b37.tar"
#tar xvzf gatk_resources-2.8.b37.tar #=>dbsnp_138.b37.vcf.gz, dbsnp_138.b37.vcf.tbi...

#dx download "$PROJECT:/resources/GenomeAnalysisTK-3.3-0.jar" -o /GenomeAnalysisTK.jar

#dx download "$PROJECT:/resources/vcr_b37_100bpBuff.interval_list" -o intList.interval_list
#dx download "$PROJECT:/resources/vcr_b37.bed" -o vcr.bed

#dx download "$PROJECT:/resources/GHS50sample.CombineGVCFs.gvcf.gz" -o combined.gvcf.gz
#dx download "$PROJECT:/resources/GHS50sample.CombineGVCFs.gvcf.gz.tbi" -o combined.gvcf.gz.tbi

p=`find / -name "libhts.so.1" -type f`
gatk_procs=$(nproc)
gatk_megs=$(head -n1 /proc/meminfo|awk '{print int(0.9*$2/1024)}')

python /Platypus/bin/Platypus.py callVariants --bamFiles=sample.bam \
		--refFile=genome.fa --output=${sample}.pp.vcf


freebayes -f genome.fa -C 5 sample.bam > ${sample}.fb.vcf


java -Xmx${gatk_megs}m -jar /GenomeAnalysisTK.jar -T HaplotypeCaller -nct $gatk_procs \
	-R genome.fa \
	-stand_call_conf 30.0 \
	-stand_emit_conf 10.0 \
	--dbsnp dbsnp_138.b37.vcf.gz \
	-o ${sample}.gvcf.gz \
	-I sample.bam \
	# directs the GATK engine restricts processing to specific genomic intervals
	-L intList.interval_list \
	#Mode for emitting reference confidence scores
	-ERC GVCF \
	-variant_index_type LINEAR \
	-variant_index_parameter 128000 \
	#For hardware-based optimizations
	-pairHMM VECTOR_LOGLESS_CACHING 

java -Xmx${gatk_megs}m -jar /GenomeAnalysisTK.jar -T GenotypeGVCFs -nt $gatk_procs \
	-R genome.fa \
	--variant ${sample}.gvcf.gz \
	--variant combined.gvcf.gz \
	-A QualByDepth \
	-A FisherStrand \
	-A DepthPerSampleHC \
	-o ${sample}.annGT.vcf.gz \
	--dbsnp dbsnp_138.b37.vcf.gz 

java -Xmx${gatk_megs}m -jar /GenomeAnalysisTK.jar -T SelectVariants -R genome.fa \
	--variant ${sample}.annGT.vcf.gz -o ${sample}.gk.vcf -se "${sample}" \
	# exclude nonvariant calls
	-env 

for i in pp gk fb; do
	echo "$sample ${sample}_$i" > ${i}.reheader.txt
	bcftools reheader -s ${i}.reheader.txt -o ${sample}.{i}.vcf.gz ${sample}.${i}.vcf
#reheardered vcf need to be indexed for the following merge step;
	bcftools index -t ${sample}.${i}.vcf.gz
done

#merge the extract indels generated by three different variant caller and filter by AN;
bcftools merge ${sample}.gk.vcf.gz ${sample}.fb.vcf.gz ${sample}.pp.vcf.gz -O z |\
bcftools view -e "AN<4" -v indels -O z -o ${sample}.gk_fb_pp.indel.merged.vcf.gz -

bcftools index -t ${sample}.gk_fb_pp.indel.merged.vcf.gz
#upload the combined cleaned indel vcf file 
combined_indel_vcf_file_id=`dx upload "${sample}.gk_fb_pp.indel.merged.vcf.gz" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "combined_indel_vcf" "$combined_indel_vcf_file_id"
propagate-user-meta "$realigned_bam" "$combined_indel_vcf_file_id"
propagate-user-meta "$realigned_bai" "$combined_indel_vcf_file_id"


combined_indel_vcfidx_file_id=`dx upload "${sample}.gk_fb_pp.indel.merged.vcf.gz.tbi" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "combined_indel_vcf_idx" "$combined_indel_vcfidx_file_id"
propagate-user-meta "$realigned_bam" "$combined_indel_vcfidx_file_id"
propagate-user-meta "$realigned_bai" "$combined_indel_vcfidx_file_id"

gatk_vcf_file_id=`dx upload "${sample}.gk.vcf.gz" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "gk_genotyped_vcfgz_file" "$gatk_vcf_file_id"
propagate-user-meta "$realigned_bam" "$gatk_vcf_file_id"
propagate-user-meta "$realigned_bai" "$gatk_vcf_file_id"

gatk_vcfidx_file_id=`dx upload "${sample}.gk.vcf.gz.tbi" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "gk_genotyped_vcfgz_file_idx" "$gatk_vcfidx_file_id"
propagate-user-meta "$realigned_bam" "$gatk_vcfidx_file_id"
propagate-user-meta "$realigned_bai" "$gatk_vcfidx_file_id"

freebayes_vcf_file_id=`dx upload "${sample}.fb.vcf.gz" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "fb_genotyped_vcfgz_file" "$freebayes_vcf_file_id"
propagate-user-meta "$realigned_bam" "$freebayes_vcf_file_id"
propagate-user-meta "$realigned_bai" "$freebayes_vcf_file_id"

freebayes_vcfidx_file_id=`dx upload "${sample}.fb.vcf.gz.tbi" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "fb_genotyped_vcfgz_file_idx" "$freebayes_vcfidx_file_id"
propagate-user-meta "$realigned_bam" "$freebayes_vcfidx_file_id"
propagate-user-meta "$realigned_bai" "$freebayes_vcfidx_file_id"

platypus_vcf_file_id=`dx upload "${sample}.pp.vcf.gz" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "pp_genotyped_vcfgz_file" "$platypus_vcf_file_id"
propagate-user-meta "$realigned_bam" "$platypus_vcf_file_id"
propagate-user-meta "$realigned_bai" "$platypus_vcf_file_id"

platypus_vcfidx_file_id=`dx upload "${sample}.pp.vcf.gz.tbi" --brief --wait -p -o "/$sample/"`
dx-jobutil-add-output "pp_genotyped_vcfgz_file_idx" "$platypus_vcfidx_file_id"
propagate-user-meta "$realigned_bam" "$platypus_vcfidx_file_id"
propagate-user-meta "$realigned_bai" "$platypus_vcfidx_file_id"

#sudo apt-get install libgcrypt11-dev zlib1g-dev



